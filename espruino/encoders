USB.setup(115200,{bytesize:8,stopbits:1,parity:none});

function makeReading() {
 on = !on;
 digitalWrite(LED1, on);
 IRSensors();
}

// How many phase transistions since last poll
// for Left and Right wheels
var Lclicks = 0, Rclicks = 0;
// Values from each of the four sensors
// Left, Right and Track A and B
var LtrA = 0, LtrB = 0, RtrA = 0, RtrB = 0;
// Stored values from the Track A sensors
var oldLtrA = 0, oldRtrA = 0;

// Send the speed to the Pi every 100ms
var r = setInterval(sendSpeed, 250);

// Take a reading every 3ms
var i = setInterval(makeReading, 3);

// increments or decrements the click counter
// depending upon the X
function makeReading() {
  // Read left hand sensors
  if (analogRead(B1)>0.9) {LtrA=1;} else {LtrA=0;}
  if (analogRead(A7)>0.9) {LtrB=1;} else {LtrB=0;}
  // Detect phase transition and increment or
  // decrement wheel clicks depending upon value
  // of other sensor
  if ((oldLtrA === 0) && (LtrA ===1))
  {
    if (LtRB === 0){Lclicks++;} else {Lclicks--;}
  }
  oldLtrA = LtrA;
  // Read right hand sensors
  if (analogRead(A6)>0.9) {RtrA=1;} else {RtrA=0;}
  if (analogRead(A5)>0.9) {RtrB=1;} else {RtrB=0;}
  // Detect phase transition and increment or
  // decrement wheel clicks depending upon value
  // of other sensor
  if ((oldRtrA === 0) && (RtrA ===1))
  {
    if (RtRB === 0){Rclicks++;} else {Rclicks--;}
  }
  oldRtrA = RtrA;
}

// Translate clicks into speed,
// reset the number of clicks and then
// send message
function sendSpeed(){
  // 4mph = 24 clicks per second or
  // 6 clicks per 250ms message
  // so this translates into percentage of max speed
  Lspeed = Lclicks/6;
  Rspeed = Rclicks/6;
  // reset counters
  Lclicks = 0;
  Rclicks = 0;
  message = String('{"type":"encoder","sensor":"IR","left":"'+Lspeed+'","right":"'+Rspeed+'"}!');
  USB.print(message);
}